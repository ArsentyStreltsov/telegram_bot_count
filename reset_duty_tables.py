#!/usr/bin/env python3
"""
Reset duty tables to apply new schema
"""
import os
import sys
from dotenv import load_dotenv

# Add current directory to path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from db import get_db
from models import DutyTask, DutySchedule
from sqlalchemy import text

def reset_duty_tables():
    """Reset duty tables to apply new schema"""
    print("üîÑ –°–±—Ä–æ—Å —Ç–∞–±–ª–∏—Ü –¥–µ–∂—É—Ä—Å—Ç–≤ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ö–µ–º—ã")
    
    db = next(get_db())
    try:
        # Drop existing tables
        print("üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã...")
        db.execute(text("DROP TABLE IF EXISTS duty_schedules CASCADE"))
        db.execute(text("DROP TABLE IF EXISTS duty_tasks CASCADE"))
        db.commit()
        print("‚úÖ –°—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã —É–¥–∞–ª–µ–Ω—ã")
        
        # Recreate tables
        print("üî® –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã...")
        DutyTask.__table__.create(db.bind, checkfirst=True)
        DutySchedule.__table__.create(db.bind, checkfirst=True)
        db.commit()
        print("‚úÖ –ù–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    reset_duty_tables()

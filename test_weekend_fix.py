#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–Ω–µ–π - –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ–º–∞—à–Ω–∏–µ –¥–µ–ª–∞ –Ω–∞–∑–Ω–∞—á–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Å—É–±–±–æ—Ç—É
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from datetime import date, timedelta
from services.duty_service import DutyService
from models import DutyTask, DutyTaskType
from db import init_db, get_db

def test_weekend_scheduling():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–Ω–µ–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–Ω–µ–π")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_db()
    db = next(get_db())
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏
    tasks = db.query(DutyTask).all()
    print(f"\nüìã –í—Å–µ–≥–æ –∑–∞–¥–∞—á: {len(tasks)}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏ (—Å—É–±–±–æ—Ç–∞ –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)
    test_dates = [
        date(2024, 9, 7),  # –°—É–±–±–æ—Ç–∞
        date(2024, 9, 8),  # –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
    ]
    
    for test_date in test_dates:
        day_name = ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"][test_date.weekday()]
        is_weekend = test_date.weekday() >= 5
        
        print(f"\nüìÖ {day_name} {test_date.strftime('%d.%m.%Y')} (–≤—ã—Ö–æ–¥–Ω–æ–π: {is_weekend}):")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –∑–∞–¥–∞—á—É
        for task in tasks:
            if task.is_weekend_only:
                should_schedule = DutyService._should_schedule_task(task, test_date, is_weekend)
                status = "‚úÖ" if should_schedule else "‚ùå"
                print(f"  {status} {task.name} (—á–∞—Å—Ç–æ—Ç–∞: {task.frequency_days} –¥–Ω–µ–π)")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –¥–æ–º–∞—à–Ω–∏–µ –¥–µ–ª–∞
    print(f"\nüè† –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–º–∞—à–Ω–∏–µ –¥–µ–ª–∞:")
    household_tasks = ["–ü—Ä–æ–ø—ã–ª–µ—Å–æ—Å–∏—Ç—å –ø–æ–ª—ã", "–ü–æ–º—ã—Ç—å –ø–æ–ª—ã", "–£–±—Ä–∞—Ç—å —Ç—É–∞–ª–µ—Ç—ã", "–ü—Ä–æ—Ç–µ—Ä–µ—Ç—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏"]
    
    for task_name in household_tasks:
        task = db.query(DutyTask).filter(DutyTask.name == task_name).first()
        if task:
            print(f"\nüìã {task_name}:")
            for test_date in test_dates:
                day_name = ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"][test_date.weekday()]
                should_schedule = DutyService._should_schedule_task(task, test_date, True)
                status = "‚úÖ" if should_schedule else "‚ùå"
                print(f"  {day_name} {test_date.strftime('%d.%m')}: {status}")
    
    db.close()
    print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    test_weekend_scheduling()

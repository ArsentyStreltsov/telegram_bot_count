"""
Text utilities for bot messages in Russian
"""
from models import ExpenseCategory, Currency
from typing import Dict, List
from datetime import datetime

def get_category_name(category: ExpenseCategory) -> str:
    """Get Russian name for expense category"""
    names = {
        ExpenseCategory.FOOD: "–ü—Ä–æ–¥—É–∫—Ç—ã",
        ExpenseCategory.ALCOHOL: "–ê–ª–∫–æ–≥–æ–ª—å",
        ExpenseCategory.OTHER: "–î—Ä—É–≥–æ–µ"
    }
    return names.get(category, category.value)

def get_currency_name(currency: Currency) -> str:
    """Get Russian name for currency"""
    names = {
        Currency.SEK: "SEK (—à–≤–µ–¥—Å–∫–∏–µ –∫—Ä–æ–Ω—ã)",
        Currency.EUR: "EUR (–µ–≤—Ä–æ)",
        Currency.RUB: "RUB (—Ä—É–±–ª–∏)"
    }
    return names.get(currency, currency.value)

def format_amount(amount: float, currency: Currency) -> str:
    """Format amount with currency symbol"""
    symbols = {
        Currency.SEK: "kr",
        Currency.EUR: "‚Ç¨",
        Currency.RUB: "‚ÇΩ"
    }
    symbol = symbols.get(currency, currency.value)
    return f"{amount:.2f} {symbol}"

def format_expense_report(expenses_by_category: Dict, current_month: datetime) -> str:
    """Format monthly expense report"""
    # Russian month names
    month_names = {
        1: "–Ø–Ω–≤–∞—Ä—å", 2: "–§–µ–≤—Ä–∞–ª—å", 3: "–ú–∞—Ä—Ç", 4: "–ê–ø—Ä–µ–ª—å",
        5: "–ú–∞–π", 6: "–ò—é–Ω—å", 7: "–ò—é–ª—å", 8: "–ê–≤–≥—É—Å—Ç",
        9: "–°–µ–Ω—Ç—è–±—Ä—å", 10: "–û–∫—Ç—è–±—Ä—å", 11: "–ù–æ—è–±—Ä—å", 12: "–î–µ–∫–∞–±—Ä—å"
    }
    
    month_num = current_month.month
    month_name = month_names.get(month_num, current_month.strftime("%B"))
    year = current_month.year
    
    text = f"üìä –û—Ç—á–µ—Ç –ø–æ —Ç—Ä–∞—Ç–∞–º –∑–∞ {month_name} {year}\n\n"
    
    total_sek = 0
    for category_value, data in expenses_by_category.items():
        category = ExpenseCategory(category_value)
        category_name = get_category_name(category)
        amount = data['total_sek']
        count = data['count']
        total_sek += amount
        
        # Handle custom category names for "OTHER"
        if category == ExpenseCategory.OTHER and data.get('individual_expenses'):
            individual_expenses = data['individual_expenses']
            # Show each individual expense with its own amount
            for expense in individual_expenses:
                text += f"‚Ä¢ {expense['name']}: {format_amount(expense['amount_sek'], Currency.SEK)}\n"
            continue  # Skip the default line below
        
        text += f"‚Ä¢ {category_name}: {format_amount(amount, Currency.SEK)}\n"
    
    text += f"\nüí∞ –û–±—â–∏–π –∏—Ç–æ–≥: {format_amount(total_sek, Currency.SEK)}\n\n"
    return text

def format_balance_report(balances: Dict, users: Dict, settlements: List) -> str:
    """Format balance report"""
    text = "üí≥ –ë–∞–ª–∞–Ω—Å—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n\n"
    
    for user_id, balance in balances.items():
        user = users.get(user_id)
        if user:
            name = user.first_name or user.username or f"User {user_id}"
            text += f"üë§ {name}:\n"
            text += f"   üí∞ –û–ø–ª–∞—Ç–∏–ª: {format_amount(balance['paid'], Currency.SEK)}\n"
            text += f"   üìã –î–æ–ª–∂–µ–Ω: {format_amount(balance['owed'], Currency.SEK)}\n"
            
            net = balance['net']
            if net > 0:
                text += f"   ‚úÖ –ö—Ä–µ–¥–∏—Ç: +{format_amount(net, Currency.SEK)}\n"
            elif net < 0:
                text += f"   ‚ùå –î–æ–ª–≥: {format_amount(abs(net), Currency.SEK)}\n"
            else:
                text += f"   ‚öñÔ∏è –ë–∞–ª–∞–Ω—Å: 0\n"
            text += "\n"
    
    if settlements:
        text += "üîÑ –ü–ª–∞–Ω –ø–æ–≥–∞—à–µ–Ω–∏—è:\n\n"
        for settlement in settlements:
            from_user = users.get(settlement['from_user_id'])
            to_user = users.get(settlement['to_user_id'])
            
            if from_user and to_user:
                from_name = from_user.first_name or from_user.username or f"User {settlement['from_user_id']}"
                to_name = to_user.first_name or to_user.username or f"User {settlement['to_user_id']}"
                
                text += f"‚Ä¢ {from_name} ‚Üí {to_name}: {format_amount(settlement['amount_sek'], Currency.SEK)}\n"
    
    return text

def format_shopping_list(items: List, page: int = 1, total_pages: int = 1) -> str:
    """Format shopping list"""
    if not items:
        return "üõí –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –ø—É—Å—Ç"
    
    text = "üõí –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫:\n\n"
    
    for i, item in enumerate(items, 1):
        status = "‚úÖ" if item.is_checked else "‚≠ï"
        text += f"{i}. {status} {item.title}\n"
    
    return text

def get_welcome_message(user_name: str) -> str:
    """Get welcome message"""
    return f"""üëã –ü—Ä–∏–≤–µ—Ç, {user_name}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–µ–º–µ–π–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤!

–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Ä¢ üìù –û–±—â–∏–π —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫
‚Ä¢ üí∞ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
‚Ä¢ üìä –ú–µ—Å—è—á–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –∏ –±–∞–ª–∞–Ω—Å—ã

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é:"""

def get_help_message() -> str:
    """Get help message"""
    return """üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:

/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/set_rate EUR 11.30 - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã

üõí –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫:
‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫
‚Ä¢ –û—Ç–º–µ—á–∞–π—Ç–µ –∫—É–ø–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ä–∞—Å—Ö–æ–¥—ã –∏–∑ –ø–æ–∫—É–ø–æ–∫

üí∞ –†–∞—Å—Ö–æ–¥—ã:
‚Ä¢ –í—ã–±–∏—Ä–∞–π—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –≤–∞–ª—é—Ç—É
‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ —Å—É–º–º—É –∏ –∑–∞–º–µ—Ç–∫—É
‚Ä¢ –í—ã–±–∏—Ä–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è

üìä –û—Ç—á–µ—Ç—ã:
‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ —Ä–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –±–∞–ª–∞–Ω—Å—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
‚Ä¢ –ó–∞–∫—Ä—ã–≤–∞–π—Ç–µ –º–µ—Å—è—Ü—ã

üí± –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç:
‚Ä¢ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã
‚Ä¢ –í—Å–µ —Ä–∞—Å—á–µ—Ç—ã –≤–µ–¥—É—Ç—Å—è –≤ SEK

üë• –ü—Ä–æ—Ñ–∏–ª–∏:
‚Ä¢ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ –≥—Ä—É–ø–ø—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
‚Ä¢ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ –≤–µ—Å–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"""

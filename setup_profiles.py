"""
Setup profiles and family members after all users have joined the bot
"""
from db import get_db, init_db
from models import User, Profile, ProfileMember
from sqlalchemy.orm import Session

def list_users():
    """List all registered users"""
    db = next(get_db())
    
    try:
        users = db.query(User).order_by(User.created_at).all()
        
        if not users:
            print("‚ùå –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            print("–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ–º—å–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –±–æ—Ç—É —Å –ø–æ–º–æ—â—å—é /start")
            return []
        
        print("üë• –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
        print("-" * 50)
        
        for i, user in enumerate(users, 1):
            name = user.first_name or user.username or f"User {user.telegram_id}"
            print(f"{i}. {name} (@{user.username or 'no username'}) - ID: {user.id}")
        
        print("-" * 50)
        return users
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        return []
    finally:
        db.close()

def setup_home_profile():
    """Setup Home profile with family members"""
    db = next(get_db())
    
    try:
        # Get all users
        users = db.query(User).all()
        if not users:
            print("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è")
            return
        
        # Get Home profile
        home_profile = db.query(Profile).filter(Profile.name == "Home").first()
        if not home_profile:
            print("‚ùå –ü—Ä–æ—Ñ–∏–ª—å 'Home' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print("\nüè† –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è 'Home' (–î–æ–º–∞—à–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥—ã)")
        print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã:")
        
        # Clear existing members
        db.query(ProfileMember).filter(ProfileMember.profile_id == home_profile.id).delete()
        
        # Group A (Arsenty, Dasha)
        print("\nüë• –ì—Ä—É–ø–ø–∞ A (—Ä–∞–≤–Ω—ã–µ –¥–æ–ª–∏):")
        group_a_input = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1,2): ").strip()
        group_a_users = []
        if group_a_input:
            try:
                indices = [int(x.strip()) - 1 for x in group_a_input.split(',')]
                group_a_users = [users[i] for i in indices if 0 <= i < len(users)]
            except (ValueError, IndexError):
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞")
                return
        
        # Group B (Mom, Dad)
        print("\nüë• –ì—Ä—É–ø–ø–∞ B (—Ä–∞–≤–Ω—ã–µ –¥–æ–ª–∏):")
        group_b_input = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: 3,4): ").strip()
        group_b_users = []
        if group_b_input:
            try:
                indices = [int(x.strip()) - 1 for x in group_b_input.split(',')]
                group_b_users = [users[i] for i in indices if 0 <= i < len(users)]
            except (ValueError, IndexError):
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞")
                return
        
        # Add members to profile
        for user in group_a_users:
            member = ProfileMember(
                profile_id=home_profile.id,
                user_id=user.id,
                group_name="Group A",
                weight=1.0
            )
            db.add(member)
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –≤ Group A: {user.first_name or user.username}")
        
        for user in group_b_users:
            member = ProfileMember(
                profile_id=home_profile.id,
                user_id=user.id,
                group_name="Group B",
                weight=1.0
            )
            db.add(member)
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –≤ Group B: {user.first_name or user.username}")
        
        db.commit()
        print(f"\n‚úÖ –ü—Ä–æ—Ñ–∏–ª—å 'Home' –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø—Ä–æ—Ñ–∏–ª—è: {e}")
    finally:
        db.close()

def setup_trip_profile():
    """Setup Trip profile with all family members"""
    db = next(get_db())
    
    try:
        # Get all users
        users = db.query(User).all()
        if not users:
            print("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è")
            return
        
        # Get Trip profile
        trip_profile = db.query(Profile).filter(Profile.name == "Trip").first()
        if not trip_profile:
            print("‚ùå –ü—Ä–æ—Ñ–∏–ª—å 'Trip' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print("\n‚úàÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è 'Trip' (–†–∞—Å—Ö–æ–¥—ã –Ω–∞ –ø–æ–µ–∑–¥–∫–∏)")
        
        # Clear existing members
        db.query(ProfileMember).filter(ProfileMember.profile_id == trip_profile.id).delete()
        
        # Add all users with equal weights
        for user in users:
            member = ProfileMember(
                profile_id=trip_profile.id,
                user_id=user.id,
                group_name="default",
                weight=1.0
            )
            db.add(member)
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: {user.first_name or user.username}")
        
        db.commit()
        print(f"\n‚úÖ –ü—Ä–æ—Ñ–∏–ª—å 'Trip' –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        db.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø—Ä–æ—Ñ–∏–ª—è: {e}")
    finally:
        db.close()

def main():
    """Main setup function"""
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–ª—è —Å–µ–º–µ–π–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤")
    print("=" * 50)
    
    # List users
    users = list_users()
    if not users:
        return
    
    # Setup profiles
    setup_home_profile()
    setup_trip_profile()
    
    print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤.")

if __name__ == "__main__":
    main()

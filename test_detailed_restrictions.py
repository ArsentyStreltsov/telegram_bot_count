#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ –∑–∞–¥–∞–Ω–∏—è
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from datetime import date, timedelta
from services.duty_service import DutyService
from models import DutyTask, DutySchedule, DutyTaskType, User
from db import init_db, get_db

def test_detailed_restrictions():
    """–î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π"""
    print("üß™ –î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ –∑–∞–¥–∞–Ω–∏—è")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_db()
    db = next(get_db())
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    users = db.query(User).all()
    print(f"\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ:")
    for user in users:
        name = user.first_name or user.username or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        print(f"  - {name} (first_name: '{user.first_name}', username: '{user.username}')")
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á—É "–í—ã–Ω–æ—Å –º—É—Å–æ—Ä–∞"
    garbage_task = db.query(DutyTask).filter(DutyTask.name.like("%–º—É—Å–æ—Ä%")).first()
    if not garbage_task:
        print("‚ùå –ó–∞–¥–∞—á–∞ '–í—ã–Ω–æ—Å –º—É—Å–æ—Ä–∞' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    print(f"\nüóëÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–¥–∞—á—É: {garbage_task.name}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for user in users:
        name = user.first_name or user.username or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        can_do = DutyService._can_user_do_task(user, garbage_task)
        status = "‚úÖ" if can_do else "‚ùå"
        
        # –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        user_name_for_check = user.first_name or user.username or ""
        print(f"  {status} {name}:")
        print(f"    - first_name: '{user.first_name}'")
        print(f"    - username: '{user.username}'")
        print(f"    - user_name_for_check: '{user_name_for_check}'")
        print(f"    - user_name_for_check.lower(): '{user_name_for_check.lower()}'")
        print(f"    - can_do: {can_do}")
        print()
    
    db.close()

if __name__ == "__main__":
    test_detailed_restrictions()

